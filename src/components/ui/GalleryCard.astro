---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import type { ImageMetadata } from "astro";
import { translateTag } from "@/lib/tagMapper";

type Props = {
  galleryItem: CollectionEntry<"gallery">;
};

const { galleryItem } = Astro.props as Props;
const locale = Astro.currentLocale as "pt" | "en";

// Get author data if available
const author = galleryItem.data.author ? await getEntry(galleryItem.data.author) : null;

// Dynamically import the image from assets
const images = import.meta.glob("/src/assets/images/**/*", { eager: true });
// Convert CMS path (/images/gallery/filename.jpg) to asset path (gallery/filename.jpg)
const relativeImagePath = galleryItem.data.image.replace(/^\/images\//, "");
const imagePath = `/src/assets/images/${relativeImagePath}`;
const imageModule = images[imagePath] as { default: ImageMetadata };
const optimizedImage = imageModule?.default;
---

<div class="group relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300">
  <Image
    src={optimizedImage}
    alt={galleryItem.data.title}
    class="w-full h-auto object-cover"
    width={400}
    height={300}
    loading="lazy"
  />
  <div class="absolute inset-0 bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-300 flex items-end cursor-pointer gallery-overlay" data-image-src={optimizedImage?.src} data-image-title={galleryItem.data.title} data-author-name={author?.data.name || ""} data-author-link={author?.data.socialMediaLink || ""}>
    <div class="p-4 pt-6 text-white bg-gradient-to-t from-black/80 to-transparent transform translate-y-full group-hover:translate-y-0 transition-transform duration-300 w-full cursor-default gallery-content">
      <h3 class="text-lg font-medium mb-1">{galleryItem.data.title}</h3>
      {galleryItem.data.description && (
        <p class="text-sm text-gray-200 mb-2">{galleryItem.data.description}</p>
      )}
      {author && (
        <p class="text-xs text-gray-300 mb-2">
          By {author.data.socialMediaLink ? (
            <a
              href={author.data.socialMediaLink}
              target="_blank"
              rel="noopener noreferrer"
              class="hover:text-white underline decoration-dotted underline-offset-2"
            >
              {author.data.name}
            </a>
          ) : (
            author.data.name
          )}
        </p>
      )}
      {galleryItem.data.category && (
        <span
          class="inline-block px-2 py-1 text-xs bg-white text-black bg-opacity-20 rounded cursor-pointer hover:bg-opacity-30 transition-all pointer-events-auto capitalize gallery-tag"
          data-category={galleryItem.data.category}
        >
          {translateTag(galleryItem.data.category, locale)}
        </span>
      )}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const galleryOverlays = document.querySelectorAll('.gallery-overlay');
    galleryOverlays.forEach(overlay => {
      overlay.addEventListener('click', () => {
        const imageSrc = overlay.getAttribute('data-image-src');
        const imageTitle = overlay.getAttribute('data-image-title');
        const authorName = overlay.getAttribute('data-author-name');
        const authorLink = overlay.getAttribute('data-author-link');
        if (imageSrc && imageTitle && authorName && authorLink) {
          window.openImageModal(imageSrc, imageTitle, authorName, authorLink);
        }
      });
    });

    const galleryContents = document.querySelectorAll('.gallery-content');
    galleryContents.forEach(content => {
      content.addEventListener('click', (e) => {
        e.stopPropagation();
      });
    });

    const galleryTags = document.querySelectorAll('.gallery-tag');
    galleryTags.forEach(tag => {
      tag.addEventListener('click', (e) => {
        e.stopPropagation();
        const category = tag.getAttribute('data-category');
        if (category && window.filterByTag) {
          window.filterByTag(category);
        }
      });
    });
  });
</script>
