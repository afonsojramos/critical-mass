---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import type { ImageMetadata } from "astro";
import { translateTag } from "@/lib/tagMapper";

type Props = {
  galleryItem: CollectionEntry<"gallery">;
};

const { galleryItem } = Astro.props as Props;
const locale = Astro.currentLocale as "pt" | "en";

// Get author data if available
const author = galleryItem.data.author ? await getEntry(galleryItem.data.author) : null;

// Dynamically import the image from assets
const images = import.meta.glob("/src/assets/images/**/*", { eager: true });
// Convert CMS path (/images/gallery/filename.jpg) to asset path (gallery/filename.jpg)
const relativeImagePath = galleryItem.data.image.replace(/^\/images\//, "");
const imagePath = `/src/assets/images/${relativeImagePath}`;
const imageModule = images[imagePath] as { default: ImageMetadata };
const optimizedImage = imageModule?.default;
---

<div class="group relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300 cursor-pointer" onclick={`openImageModal('${optimizedImage?.src}', '${galleryItem.data.title}')`}>
  <Image
    src={optimizedImage}
    alt={galleryItem.data.title}
    class="w-full h-auto object-cover"
    width={400}
    height={300}
    loading="lazy"
  />
  <div class="absolute inset-0 bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-300 flex items-end">
    <div class="p-4 text-white bg-gradient-to-t from-black/60 to-transparent transform translate-y-full group-hover:translate-y-0 transition-transform duration-300 w-full">
      <h3 class="text-lg font-medium mb-1">{galleryItem.data.title}</h3>
      {galleryItem.data.description && (
        <p class="text-sm text-gray-200 mb-1">{galleryItem.data.description}</p>
      )}
      {author && (
        <p class="text-xs text-gray-300 mb-1">By {author.data.name}</p>
      )}
      {galleryItem.data.category && (
        <span
          class="inline-block px-2 py-1 text-xs bg-white text-black bg-opacity-20 rounded cursor-pointer hover:bg-opacity-30 transition-all"
          onclick={`event.stopPropagation(); filterByTag('${galleryItem.data.category}')`}
        >
          {translateTag(galleryItem.data.category, locale)}
        </span>
      )}
    </div>
  </div>
</div>
